from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

TOKEN = "7525904539:AAHzE_r-B8Eqs2TYjVZP0_GfpLsscV0pwKk"
ADMIN_CHAT_ID = "5084880209"

# –•—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ (user_id: {rating: int, text: str})
user_reviews = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_review")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.", reply_markup=reply_markup)

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "leave_review":
        keyboard = [
            [InlineKeyboardButton("‚≠ê", callback_data="rate_1"),
             InlineKeyboardButton("2‚≠ê", callback_data="rate_2"),
             InlineKeyboardButton("3‚≠ê", callback_data="rate_3"),
             InlineKeyboardButton("4‚≠ê", callback_data="rate_4"),
             InlineKeyboardButton("5‚≠ê", callback_data="rate_5")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥:", reply_markup=reply_markup)

    elif query.data.startswith("rate_"):
        user_id = query.from_user.id
        user_reviews[user_id] = {
            "rating": int(query.data.split("_")[1]),
            "text": "",
            "username": query.from_user.username,
            "full_name": query.from_user.full_name
        }
        await query.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ —Ç–µ–∫—Å—Ç–æ–º.")

async def handle_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    review_text = update.message.text

    if user_id in user_reviews:
        user_reviews[user_id]["text"] = review_text
        rating = user_reviews[user_id]["rating"]
        username = user_reviews[user_id]["username"]
        full_name = user_reviews[user_id]["full_name"]

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = f"üÜî ID: {user_id}\n"
        if username:
            user_info += f"üë§ –ù–∏–∫–Ω–µ–π–º: @{username}\n"
        user_info += f"üìõ –ò–º—è: {full_name}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
        review_message = f"{user_info}‚≠ê –û—Ü–µ–Ω–∫–∞: {rating}\nüìù –û—Ç–∑—ã–≤: {review_text}"
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=review_message)

        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üòä")
        del user_reviews[user_id]  # –£–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–º—è—Ç–∏

    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥!")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_button))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_review))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
